[{"path":"https://gpitt71.github.io/clmplus/articles/casestudy1.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Vignette 1","text":"clmplus package aims offer fast user-friendly implementation modeling framework introduced paper, Pittarello, Hiabu, Villegas (2025). vignette: replicate chain-ladder model using age-model claim development. can replicate chain ladder model using age-model claim development. discussed paper, modeling claim development allows us replicate chain-ladder estimate claims reserve using fewer parameters modeling claim amounts (England Verrall (1999)). provide example illustrating incorporating cohort effect can enhance model fit. proceeding, summarise table notation claim development models implemented clmplus package. implementation models claim development available clmplus based implementation models human mortality implemented StMoMo package. Users can either rely default models set configuration claim development.","code":""},{"path":"https://gpitt71.github.io/clmplus/articles/casestudy1.html","id":"replicate-the-chain-ladder-with-the-clmplus-package","dir":"Articles","previous_headings":"","what":"Replicate the chain-ladder with the clmplus package","title":"Vignette 1","text":"tutorial, use AutoBIPaid run-triangle available ChainLadder package (Gesmann et al. (2025)). data pre-processed using AggregateDataPP method. desired model fit using clmplus method. fitted model, possible extract fitted development factors: also possible extract fitted effects claims development. Predictions can computed predict method. model predictions, can extract predicted development factors, full lower triangle predicted cumulative claims. can also predict different forecasting horizons. predictions one calendar period ahead. forecasting horizon can specified forecasting_horizon argument predict method. compare estimates obtained Mack chain-ladder method (Mack (1993)) implemented ChainLadder package. predict reserve literature benchmark. Estimates gathered data.frame comparison.","code":"a.model.fit=clmplus(AggregateDataPP =  pp_data,               hazard.model = \"a\") #> StMoMo: The following ages have been zero weighted: 1  #> StMoMo: The following years have been zero weighted: 1  #> StMoMo: The following cohorts have been zero weighted: -7 -6 -5 -4 -3 -2 -1 7  #> StMoMo: Start fitting with gnm #> StMoMo: Finish fitting with gnm a.model.fit$fitted_development_factors #>      [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8] #> [1,]   NA 4.098156 2.087506 1.619294 1.414518 1.302461 1.236005 1.191122 #> [2,]   NA 4.098156 2.087506 1.619294 1.414518 1.302461 1.236005       NA #> [3,]   NA 4.098156 2.087506 1.619294 1.414518 1.302461       NA       NA #> [4,]   NA 4.098156 2.087506 1.619294 1.414518       NA       NA       NA #> [5,]   NA 4.098156 2.087506 1.619294       NA       NA       NA       NA #> [6,]   NA 4.098156 2.087506       NA       NA       NA       NA       NA #> [7,]   NA 4.098156       NA       NA       NA       NA       NA       NA #> [8,]   NA       NA       NA       NA       NA       NA       NA       NA a.model.fit$fitted_effects #> $fitted_development_effect #>          0          1          2          3          4          5          6  #>         NA  0.1950754 -0.3503294 -0.7489324 -1.0689916 -1.3366344 -1.5554467  #>          7  #> -1.7461089  #>  #> $fitted_calendar_effect #> NULL #>  #> $fitted_accident_effect #> NULL a.model <- predict(a.model.fit) a.model$development_factors_predicted #>      [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8] #> [1,]   NA       NA       NA       NA       NA       NA       NA       NA #> [2,]   NA       NA       NA       NA       NA       NA       NA 1.191122 #> [3,]   NA       NA       NA       NA       NA       NA 1.236005 1.191122 #> [4,]   NA       NA       NA       NA       NA 1.302461 1.236005 1.191122 #> [5,]   NA       NA       NA       NA 1.414518 1.302461 1.236005 1.191122 #> [6,]   NA       NA       NA 1.619294 1.414518 1.302461 1.236005 1.191122 #> [7,]   NA       NA 2.087506 1.619294 1.414518 1.302461 1.236005 1.191122 #> [8,]   NA 4.098156 2.087506 1.619294 1.414518 1.302461 1.236005 1.191122 a.model$lower_triangle #>      [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]      [,8] #> [1,]   NA       NA       NA       NA       NA       NA       NA        NA #> [2,]   NA       NA       NA       NA       NA       NA       NA  74756.02 #> [3,]   NA       NA       NA       NA       NA       NA 75506.30  89937.23 #> [4,]   NA       NA       NA       NA       NA 67786.58 83784.54  99797.62 #> [5,]   NA       NA       NA       NA 55952.67 72876.17 90075.29 107290.68 #> [6,]   NA       NA       NA 35679.53 50469.34 65734.34 81247.96  96776.25 #> [7,]   NA       NA 24926.91 40364.00 57095.61 74364.80 91915.25 109482.29 #> [8,]   NA 11478.94 23962.35 38802.09 54886.26 71487.21 88358.53 105245.81 a.model$full_triangle #>      [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]      [,8] #> [1,] 1904  7302.00 14798.00 23680.00 33392.00 43463.00 53662.00  63918.00 #> [2,] 2235  8496.00 17187.00 27630.00 38976.00 50730.00 62761.00  74756.02 #> [3,] 2441  9789.00 20451.00 33106.00 46854.00 61089.00 75506.30  89937.23 #> [4,] 2503 10676.00 22486.00 36662.00 52045.00 67786.58 83784.54  99797.62 #> [5,] 2838 11550.00 24278.00 39556.00 55952.67 72876.17 90075.29 107290.68 #> [6,] 2405 10263.00 22034.00 35679.53 50469.34 65734.34 81247.96  96776.25 #> [7,] 2759 11941.00 24926.91 40364.00 57095.61 74364.80 91915.25 109482.29 #> [8,] 2801 11478.94 23962.35 38802.09 54886.26 71487.21 88358.53 105245.81 a.model.2 <- predict(a.model.fit,                      forecasting_horizon=1) mck.chl <- MackChainLadder(input_data) ultimate.chl=mck.chl$FullTriangle[,dim(mck.chl$FullTriangle)[2]] diagonal=rev(t2c(mck.chl$FullTriangle)[,dim(mck.chl$FullTriangle)[2]]) data.frame(ultimate.cost.mack=ultimate.chl,            ultimate.cost.clmplus=a.model$ultimate_cost,            reserve.mack=ultimate.chl-diagonal,            reserve.clmplus=a.model$reserve            ) #>   ultimate.cost.mack ultimate.cost.clmplus reserve.mack reserve.clmplus #> 1           63918.00              63918.00         0.00            0.00 #> 2           74756.02              74756.02     11995.02        11995.02 #> 3           89937.23              89937.23     28848.23        28848.23 #> 4           99797.62              99797.62     47752.62        47752.62 #> 5          107290.68             107290.68     67734.68        67734.68 #> 6           96776.25              96776.25     74742.25        74742.25 #> 7          109482.29             109482.29     97541.29        97541.29 #> 8          105245.81             105245.81    102444.81       102444.81  cat('\\n Total reserve:',     sum(a.model$reserve)) #>  #>  Total reserve: 431058.9"},{"path":"https://gpitt71.github.io/clmplus/articles/casestudy1.html","id":"claims-reserving-with-glms-compared-to-hazard-models","dir":"Articles","previous_headings":"Replicate the chain-ladder with the clmplus package","what":"Claims reserving with GLMs compared to hazard models","title":"Vignette 1","text":"fit stochastic model replicating chain-ladder age-cohort GLM claim amounts described England Verrall (1999) using apcpackage Fannon Nielsen (2020). Inspect model coefficients derived output: method able replicate chain-ladder results without adding cohort component. inspection can performed clmplus package, provides graphical tools inspect fitted effects. fitted effects can plotted using plot function output predict method.","code":"library(apc) #> Warning: package 'apc' was built under R version 4.4.3  ds.apc = apc.data.list(cum2incr(dataset),                        data.format = \"CL\")  ac.model.apc = apc.fit.model(ds.apc,                          model.family = \"od.poisson.response\",                          model.design = \"AC\") ac.model.apc$coefficients.canonical[,'Estimate'] #>        level    age slope cohort slope     DD_age_3     DD_age_4     DD_age_5  #>   7.41596168   0.74105900   0.16519698  -1.16411707  -0.02909890  -0.17467013  #>     DD_age_6     DD_age_7     DD_age_8  DD_cohort_3  DD_cohort_4  DD_cohort_5  #>  -0.17533888   0.17408744  -0.55360421   0.02140672  -0.07364998  -0.03603392  #>  DD_cohort_6  DD_cohort_7  DD_cohort_8  #>  -0.15911660   0.20095088  -0.17521544  ac.fcst.apc = apc.forecast.ac(ac.model.apc)  data.frame(reserve.mack=ultimate.chl-diagonal,            reserve.apc=c(0,ac.fcst.apc$response.forecast.coh[,'forecast']),            reserve.clmplus=a.model$reserve                        ) #>   reserve.mack reserve.apc reserve.clmplus #> 1         0.00     0.00000            0.00 #> 2     11995.02    67.23865        11995.02 #> 3     28848.23   345.18727        28848.23 #> 4     47752.62   940.68770        47752.62 #> 5     67734.68  2350.85562        67734.68 #> 6     74742.25  4466.77443        74742.25 #> 7     97541.29  9103.24335        97541.29 #> 8    102444.81 14480.43832       102444.81 a.model.fit$fitted_effects #> $fitted_development_effect #>          0          1          2          3          4          5          6  #>         NA  0.1950754 -0.3503294 -0.7489324 -1.0689916 -1.3366344 -1.5554467  #>          7  #> -1.7461089  #>  #> $fitted_calendar_effect #> NULL #>  #> $fitted_accident_effect #> NULL plot(a.model)"},{"path":"https://gpitt71.github.io/clmplus/articles/casestudy1.html","id":"adding-a-cohort-effect-on-the-claim-development-model","dir":"Articles","previous_headings":"","what":"Adding a cohort effect on the claim development model","title":"Vignette 1","text":"adding cohort component claim development model, improve scaled-deviance residuals. scaled-deviance residuals can plotted using plot function output clmplus method.  red blue areas suggest trends age-model wasn’t able catch. fitted effect displayed . cohort component extrapolated last available accident period discussed paper.","code":"#make it triangular plot(a.model.fit) ac.model.fit <- clmplus(pp_data,                      hazard.model=\"ac\") #> StMoMo: The following ages have been zero weighted: 1  #> StMoMo: The following years have been zero weighted: 1  #> StMoMo: The following cohorts have been zero weighted: -7 -6 -5 -4 -3 -2 -1 7  #> StMoMo: Start fitting with gnm #> StMoMo: Finish fitting with gnm  ac.model <- predict(ac.model.fit,                     gk.fc.model='a') plot(ac.model.fit) plot(ac.model)"},{"path":"https://gpitt71.github.io/clmplus/articles/casestudy1.html","id":"modelling-a-period-effect-on-the-claim-development","dir":"Articles","previous_headings":"Adding a cohort effect on the claim development model","what":"Modelling a period effect on the claim development","title":"Vignette 1","text":"also possible add period component choose age-period model age-period-cohort model. clear difference residuals plot obtained using age-period model compared residuals plot obtained using age-cohort model. Conversely, plot seems improve using age-period-cohort model.   , effects age-period-cohort model.","code":"ap.model.fit = clmplus(pp_data,                    hazard.model = \"ap\") #> StMoMo: The following ages have been zero weighted: 1  #> StMoMo: The following years have been zero weighted: 1  #> StMoMo: The following cohorts have been zero weighted: -7 -6 -5 -4 -3 -2 -1 7  #> StMoMo: Start fitting with gnm #> StMoMo: Finish fitting with gnm  ap.model<-predict(ap.model.fit,                     ckj.fc.model='a',                    ckj.order = c(0,1,0))  apc.model.fit = clmplus(pp_data,hazard.model = \"apc\") #> StMoMo: The following ages have been zero weighted: 1  #> StMoMo: The following years have been zero weighted: 1  #> StMoMo: The following cohorts have been zero weighted: -7 -6 -5 -4 -3 -2 -1 7  #> StMoMo: Start fitting with gnm #> StMoMo: Finish fitting with gnm  apc.model<-predict(apc.model.fit,                     gk.fc.model='a',                     ckj.fc.model='a',                    gk.order = c(1,1,0),                    ckj.order = c(0,1,0)) plot(ap.model.fit) plot(apc.model.fit) plot(apc.model)"},{"path":[]},{"path":"https://gpitt71.github.io/clmplus/articles/modelscomparison.html","id":"code-for-section-4-3-1--models-ranking","dir":"Articles","previous_headings":"","what":"Code for Section 4.3.1. Models Ranking","title":"Models comparison","text":"rank different models based cross-validation scheme. training-validation split use represented following picture.   following picture included paper shows models ranks counts model.","code":"# models ranking  J=12 df<-data.frame(expand.grid(c(0:(J-1)),c(0:(J-1))),c(1:(J^2))) colnames(df) <- c(\"origin\",\"dev\",\"value\") df$value[df$origin+df$dev==(J-1)]=c(2) df$value[df$origin+df$dev<(J-1)]=c(1) df$value[df$origin+df$dev>=J]=c(NA) df[J,3]=c(NA) df[J*J-J+1,3]=c(NA)  ggplot(data=df, aes(x=as.integer(dev), y=as.integer(origin))) +    geom_tile(aes(fill = as.factor(value),color=\"#000000\"))+scale_y_reverse()+   scale_fill_manual(values=c(\"royalblue\", \"darkred\", \"white\"),                     na.value = \"white\",                     labels=c(\"Train\",\"Validation\",\"\"))+   theme_classic()+   labs(x=\"Development year\", y=\"Accident year\",fill=\"\")+   theme(axis.title.x = element_text(size=8), axis.text.x  = element_text(size=7))+   theme(axis.title.y = element_text(size=8), axis.text.y  = element_text(size=7))+   scale_color_brewer(guide = 'none') modelsranking.1d <- function(data.T){   \"   Function to rank the clmplus package and apc package age-period-cohort models.      This function takes a triangle of cumulative payments as input.      It returns the ranking on the triangle.   \"         leave.out=1         model.name = NULL   error.incidence = NULL   mre = NULL      #pre-processing   triangle <- data.T$cumulative.payments.triangle   J <- dim(triangle)[2]   reduced.triangle <- c2t(t2c(triangle)[1:(J-leave.out),1:(J-leave.out)])   newt.rtt <- AggregateDataPP(reduced.triangle)   to.project <- t2c(triangle)[1:(J-leave.out-1),J-leave.out]   true.values <- t2c(triangle)[2:(J-leave.out),J]         for(ix in c('a','ac','ap','apc')){          hz.fit <- StMoMo::fit(models[[ix]],                            Dxt = newt.rtt$occurrance,                            Ext = newt.rtt$exposure,                           wxt=newt.rtt$fit.w,                           iterMax=as.integer(1e+05))     hz.rate = fcst.fn(hz.fit,                    hazard.model = ix,                    gk.fc.model = 'a',                    ckj.fc.model= 'a')$rates[,1]          fij = (2+hz.rate)/(2-hz.rate)     pred.fij = fij[(leave.out+1):length(fij)]     pred.v=to.project*pred.fij          r.errors = (pred.v-true.values)/true.values     error.inc.num = sum(pred.v-true.values,na.rm = T)     error.inc.den = sum(true.values)          model.name = c(model.name,                    paste0('clmplus.',ix))     error.incidence = c(error.incidence,error.inc.num/error.inc.den)     mre = c(mre,mean(r.errors))             }      # ix='lc'   # hz.fit <- fit.lc.nr(data.T = newt.rtt,   #                     iter.max = 3e+04)   # if(hz.fit$converged==TRUE){hz.rate = forecast.lc.nr(hz.fit,J=dim(newt.rtt$cumulative.payments.triangle)[2])$rates[,1:leave.out]   # fij = (2+hz.rate)/(2-hz.rate)   # pred.fij = fij[(leave.out+1):length(fij)]   # pred.v=to.project*pred.fij   # r.errors = (pred.v-true.values)/true.values   #    # error.inc.num = sum(pred.v-true.values,na.rm = T)   # error.inc.den = sum(true.values)   #    # model.name = c(model.name,   #                paste0('clmplus.',ix))   # error.incidence = c(error.incidence,error.inc.num/error.inc.den)   # mre = c(mre,mean(r.errors))}      out1 <- data.frame(     model.name,     # mre,     error.incidence)      ## APC package      newt.apc <- apc.data.list(response=newt.rtt$incremental.payments.triangle,                             data.format=\"CL\")      ## apc      rmse = NULL   mae = NULL   error.pc = NULL   model.name = NULL   error.incidence = NULL   model.family = NULL   mre = NULL      true.inc.values <- t2c(data.T$incremental.payments.triangle)[2:(J-leave.out),(J-leave.out+1):J]         for(apc.mods in c(\"AC\",\"APC\")){ #,\"AP\"          fit <- apc.fit.model(newt.apc,                          model.family = \"od.poisson.response\",                          model.design = apc.mods)          if(apc.mods == \"AC\"){fcst <- apc.forecast.ac(fit)$trap.response.forecast}     # if(apc.mods == \"AP\"){fcst <- apc.forecast.ap(fit)$trap.response.forecast}     if(apc.mods == \"APC\"){fcst <- apc.forecast.apc(fit)$trap.response.forecast}          plogram.hat = t2c.full.square(incr2cum(t(fcst)))     pred.v = plogram.hat[,(J-leave.out+1):J]     pred.v = pred.v[2:length(pred.v)]               r.errors = (pred.v-true.values)/true.values     error.inc.num = sum(pred.v-true.values)     error.inc.den = sum(true.values)          model.name = c(model.name,                    paste0('apc.',tolower(apc.mods)))     error.incidence = c(error.incidence,error.inc.num/error.inc.den)     mre = c(mre,mean(r.errors))        }      out2 <- data.frame(     model.name,     # mre,     error.incidence)      out3 <- rbind(out1,out2)      out3 <- out3[order(abs(out3$error.incidence),decreasing = F),]   out3[,'ei.rank']=c(1:dim(out3)[1])   # out3[,'mre.rank']=order(abs(out3$mre),decreasing = F)   #fix it manually   r2set=min(out3$ei.rank[out3$model.name=='apc.ac'],             out3$ei.rank[out3$model.name=='clmplus.a'])      out3$ei.rank[out3$model.name=='apc.ac']=r2set   out3$ei.rank[out3$model.name=='clmplus.a']=r2set      if( out3$ei.rank[out3$model.name=='apc.ac'] < max(out3$ei.rank)){     cond=out3$ei.rank>out3$ei.rank[out3$model.name=='apc.ac']     out3$ei.rank[cond]=out3$ei.rank[cond]-1   }      return(list(models.ranks=out3))    } modelsranking <- function(list.of.datasets){      \"   This functions returns the datasets to plot in the ranking section of the paper.      The input is a list of datasets that constitue the sample.       The output is the rankings across different data sources.   \"         full.ranks=NULL      for(df.ix in names(list.of.datasets)){          out.df=modelsranking.1d(AggregateDataPP(list.of.datasets[[df.ix]]))     out.df$models.ranks[,'data.source']=rep(df.ix,dim(out.df$models.ranks)[1])     full.ranks=rbind(full.ranks,out.df$models.ranks)     }      return(list(full.ranks=full.ranks)) } p_min_expd0 <- ggplot(full.ranks$full.ranks, aes(model.name, data.source)) +    geom_tile(aes(fill = cut(ei.rank, breaks=0:6, labels=1:6)), colour = \"grey\") +    ggtitle(\" \") +   theme_classic()+   geom_text(aes(label = ei.rank))+    scale_y_discrete(limits=names(list.of.datasets)) +    scale_fill_manual(drop=FALSE, values=colorRampPalette(c(\"white\",\"#6699CC\"))(6), na.value=\"#EEEEEE\", name=\"Rank\") +     xlab(\"Model\") + ylab(\"Data source\") p_min_expd0 tbl=full.ranks$full.ranks %>%   dplyr::group_by(model.name) %>%   dplyr::summarise(mean.rank = mean(ei.rank)) tbl #> # A tibble: 6 × 2 #>   model.name  mean.rank #>   <chr>           <dbl> #> 1 apc.ac           3.09 #> 2 apc.apc          4.14 #> 3 clmplus.a        3.09 #> 4 clmplus.ac       2.32 #> 5 clmplus.ap       3    #> 6 clmplus.apc      2.45 library(dplyr) temp.df=full.ranks$full.ranks[,c('model.name','ei.rank')] %>%   group_by(model.name, ei.rank) %>% summarise(count = n()) #> `summarise()` has grouped output by 'model.name'. You can override using the #> `.groups` argument. ggplot(temp.df, aes(y=count, x=factor(ei.rank))) +      geom_bar(position=\"stack\", stat=\"identity\",fill='#6699CC') +   scale_y_continuous(limits=c(0,15))+   facet_wrap(~model.name, scales='free')+   theme_classic()+   ylab(\"\")+   xlab(\"Rank\")"},{"path":"https://gpitt71.github.io/clmplus/articles/modelscomparison.html","id":"code-for-section-4-3-2--model-families-comparison","dir":"Articles","previous_headings":"","what":"Code for Section 4.3.2. Model Families Comparison","title":"Models comparison","text":"evaluate --sample performance models using training, validation testing split.  models clmplus package compared apc package. can found code used create box-plot figure 8 paper. case able pick best model based error incidence.","code":"J=12 df<-data.frame(expand.grid(c(0:(J-1)),c(0:(J-1))),c(1:(J^2))) colnames(df) <- c(\"origin\",\"dev\",\"value\") df$value[df$origin+df$dev==(J-1)]=c(3) df$value[df$origin+df$dev<(J-2)]=c(1) df$value[df$origin+df$dev==(J-2)]=c(2) df$value[df$origin+df$dev>=J]=c(NA) #nas in the lower df[J,3]=c(NA) df[J-1,3]=c(NA) df[J+J-1,3]=c(NA) df[J*J-J+1,3]=c(NA) df[J*J-J+1,3]=c(NA) #nas in the upper tail df[J*J-J+1-12,3]=c(NA) df[J*J-J+2-12,3]=c(NA)  ggplot(data=df, aes(x=as.integer(dev), y=as.integer(origin))) +    geom_tile(aes(fill = as.factor(value),color=\"#000000\"))+scale_y_reverse()+   scale_fill_manual(values=c(\"royalblue\", \"darkred\", \"darkgreen\",\"white\"),                     na.value = \"white\",                     labels=c(\"Train\",\"Validation\",\"Test\",\"\"))+   theme_classic()+   labs(x=\"Development year\", y=\"Accident year\",fill=\"\")+   theme(axis.title.x = element_text(size=8), axis.text.x  = element_text(size=7))+   theme(axis.title.y = element_text(size=8), axis.text.y  = element_text(size=7))+   scale_color_brewer(guide = 'none') best.of.the.bests <- function(df1,df2){   \"   Util to turn character columns values into numeric.   \"      df1=apply(df1,MARGIN=2,FUN=as.numeric)   df2=apply(df2,MARGIN=2,FUN=as.numeric)   df3 <- rbind(df1,df2)   df3=apply(df3,FUN=abs.min,MARGIN = 2)      return(df3)    }  modelcomparison.1d <- function(cumulative.payments.triangle){   \"   Function to compare the clmplus package age-period-cohort models with apc package age-period-cohort models  performances across different triangles.      This function takes a triangle of cumulative payments as input.      It returns the accuracy measures for the two families on the triangle.   \"   # function internal variables      leave.out=2      rmse = NULL   mae = NULL   error.pc = NULL   model.name = NULL   error.incidence = NULL   model.family = NULL   mre = NULL      # data pre-precessing ----      J <- dim(cumulative.payments.triangle)[2]   reduced.triangle <- c2t(t2c(cumulative.payments.triangle)[1:(J-leave.out),1:(J-leave.out)])   newt.rtt <- AggregateDataPP(reduced.triangle)      newt.apc <- apc.data.list(response=newt.rtt$incremental.payments.triangle,                             data.format=\"CL\")      ## stmomo -----   to.project <- t2c(cumulative.payments.triangle)[1:(J-leave.out-1),J-leave.out]   true.values <- t2c(cumulative.payments.triangle)[2:(J-leave.out),(J-leave.out+1):J]         for(ix in c('a','ac','ap','apc')){ ##names(models)          hz.fit <- StMoMo::fit(models[[ix]],                            Dxt = newt.rtt$occurrance,                            Ext = newt.rtt$exposure,                           wxt=newt.rtt$fit.w,                           iterMax=as.integer(1e+05))     hz.rate = fcst.fn(hz.fit,                    hazard.model = ix,                    gk.fc.model = 'a',                    ckj.fc.model= 'a')$rates[,1:leave.out]          J.new=dim(reduced.triangle)[2]     fij = (2+hz.rate)/(2-hz.rate)     pred.mx = fij     pred.mx[,1]=fij[,1]*c(NA,to.project)     temp=unname(pred.mx[1:(J.new-1),1][!is.na(pred.mx[1:(J.new-1),1])])     pred.mx[,2]=fij[,2]*c(rep(NA,J.new-length(temp)),temp)     true.mx= rbind(rep(NA,2),true.values)     # this is meant to be NA     true.mx[2,2]=NA        sq.errors = (pred.mx-true.mx)^2     abs.errors = abs(pred.mx-true.mx)     r.errors = (pred.mx-true.mx)/true.mx     error.inc.num = apply(pred.mx-true.mx,sum,MARGIN=2,na.rm=T)     error.inc.den = apply(true.mx,sum,MARGIN=2,na.rm=T)     model.name.ix = c(paste0(ix,\".val\"),paste0(ix,\".test\"))          model.name = c(model.name,model.name.ix)     model.family = c(model.family,rep(ix,2))     rmse = c(rmse,sqrt(apply(sq.errors,MARGIN = 2,mean,na.rm=T)))     mae = c(mae,apply(abs.errors,MARGIN = 2,mean,na.rm=T))     mre = c(mre,apply(r.errors,MARGIN = 2,mean,na.rm=T))     error.incidence = c(error.incidence,error.inc.num/error.inc.den)        }       ## stmomo results ----        out1 <- data.frame(     model.name,     model.family,     mre,     error.incidence,     rmse,     mae)      temp.ix <- grepl(\".val\", model.name)   temp.df <- out1[temp.ix,]      out2 <- data.frame(     rmse=temp.df$model.name[which(abs(temp.df$rmse)==min(abs(temp.df$rmse)))],     mre=temp.df$model.name[which(abs(temp.df$mre)==min(abs(temp.df$mre)))],     mae=temp.df$model.name[which(abs(temp.df$mae)==min(abs(temp.df$mae)))],     error.incidence=temp.df$model.name[which(abs(temp.df$error.incidence)==min(abs(temp.df$error.incidence)))])       temp.ix <- grepl(\".test\", model.name)   out3 <- out1[temp.ix,]      best.df = out2   best.df[1,]=NA      out.test.min <- data.frame(     rmse=out3$model.name[which(abs(out3$rmse)==min(abs(out3$rmse)))],     mre=out3$model.name[which(abs(out3$mre)==min(abs(out3$mre)))],     mae=out3$model.name[which(abs(out3$mae)==min(abs(out3$mae)))],     error.incidence=out3$model.name[which(abs(out3$error.incidence)==min(abs(out3$error.incidence)))])      temp.mx=matrix((sub(\"\\\\..*\", \"\", out2) == sub(\"\\\\..*\", \"\", out.test.min)),nrow=1)   choices.mx.clmplus=matrix(sub(\"\\\\..*\", \"\", out2),nrow=1)      agreement.frame.clmplus=data.frame(temp.mx)   choices.frame.clmplus=data.frame(choices.mx.clmplus)      colnames(agreement.frame.clmplus)=colnames(out2)   colnames(choices.frame.clmplus)=colnames(out2)      for(col.ix in colnames(out2)){      res=out1$model.family[out1$model.name == out2[1,col.ix]]   res.test = out3$model.family == res   best.df[1,col.ix] = out3[res.test,col.ix]}      families.set=c('a','apc') #'ap',   temp.ix = out3$model.family %in% families.set   comparison.df = out3[temp.ix,]   comparison.df = cbind(comparison.df,                         approach=rep('clmplus',length(families.set)))       ## apc ----      rmse = NULL   mae = NULL   error.pc = NULL   model.name = NULL   error.incidence = NULL   model.family = NULL   mre = NULL      true.inc.values <- t2c(cum2incr(cumulative.payments.triangle))[2:(J-leave.out),(J-leave.out+1):J]         for(apc.mods in c(\"AC\",\"APC\")){ #,\"AP\"          fit <- apc.fit.model(newt.apc,                          model.family = \"od.poisson.response\",                          model.design = apc.mods)          if(apc.mods == \"AC\"){fcst <- apc.forecast.ac(fit)$trap.response.forecast}     # if(apc.mods == \"AP\"){fcst <- apc.forecast.ap(fit)$trap.response.forecast}     if(apc.mods == \"APC\"){fcst <- apc.forecast.apc(fit)$trap.response.forecast}          plogram.hat = t2c.full.square(incr2cum(t(fcst)))     pred.mx = plogram.hat[,(J-leave.out+1):J]          # true.mx= rbind(rep(NA,2),true.inc.values)     # # this is meant to be NA     # true.mx[2,2]=NA        sq.errors = (pred.mx-true.mx)^2     abs.errors = abs(pred.mx-true.mx)     r.errors = (pred.mx-true.mx)/true.mx #use same benchmark     error.inc.num = apply(pred.mx-true.mx,sum,MARGIN=2,na.rm=T)     error.inc.den = apply(true.mx,sum,MARGIN=2,na.rm=T) #use same benchmark     model.name.ix = c(paste0(apc.mods,\".val\"),paste0(apc.mods,\".test\"))          model.name = c(model.name,tolower(model.name.ix))     model.family = c(model.family,tolower(rep(apc.mods,2)))     rmse = c(rmse,sqrt(apply(sq.errors,MARGIN = 2,mean,na.rm=T)))     mae = c(mae,apply(abs.errors,MARGIN = 2,mean,na.rm=T))     mre = c(mre,apply(r.errors,MARGIN = 2,mean,na.rm=T))     error.incidence = c(error.incidence,error.inc.num/error.inc.den)}                out4 <- data.frame(     model.name,     model.family,     mre,     error.incidence,     rmse,     mae)      temp.ix <- grepl(\".val\", model.name)   temp.df <- out4[temp.ix,]      out5 <- data.frame(     rmse=temp.df$model.name[which(abs(temp.df$rmse)==min(abs(temp.df$rmse)))],     mre=temp.df$model.name[which(abs(temp.df$mre)==min(abs(temp.df$mre)))],     mae=temp.df$model.name[which(abs(temp.df$mae)==min(abs(temp.df$mae)))],     error.incidence=temp.df$model.name[which(abs(temp.df$error.incidence)==min(abs(temp.df$error.incidence)))])      temp.ix <- grepl(\".test\", model.name)   out6 <- out4[temp.ix,]      out.test.min2 <- data.frame(   rmse=out6$model.name[which(abs(out6$rmse)==min(abs(out6$rmse)))],   mre=out6$model.name[which(abs(out6$mre)==min(abs(out6$mre)))],   mae=out6$model.name[which(abs(out6$mae)==min(abs(out6$mae)))],   error.incidence=out6$model.name[which(abs(out6$error.incidence)==min(abs(out6$error.incidence)))])    temp.mx=matrix((sub(\"\\\\..*\", \"\", out5) == sub(\"\\\\..*\", \"\", out.test.min2)),nrow=1)   choices.mx.apc=matrix(sub(\"\\\\..*\", \"\", out5),nrow=1)      choices.frame.apc=data.frame(choices.mx.apc)   agreement.frame.apc=data.frame(temp.mx)      colnames(agreement.frame.apc)=colnames(out5)   colnames(choices.frame.apc)=colnames(out5)      best.df.apc = out5   best.df.apc[1,]=NA      for(col.ix in colnames(out5)){      res=out4$model.family[out4$model.name == out5[1,col.ix]]   res.test = out6$model.family == res   best.df.apc[1,col.ix] = out6[res.test,col.ix]}          families.set=c('ac','apc') #'ap',   temp.ix = out6$model.family %in% families.set   comparison.df.apc = out6[temp.ix,]   comparison.df.apc = cbind(comparison.df.apc,                             approach=rep('apc',length(families.set)))         out = list(     best.model.clmplus = best.df,     best.model.apc = best.df.apc,     agreement.frame.clmplus=agreement.frame.clmplus,     agreement.frame.apc=agreement.frame.apc,     choices.frame.clmplus=choices.frame.clmplus,     choices.frame.apc=choices.frame.apc,     comparison.df = rbind(comparison.df,                           comparison.df.apc))      return(out)} modelcomparison<-function(list.of.datasets){   \"This functions returns the datasets to plot the bake-off section of the paper.      The input is a list of datasets that constitue the sample.       The output is datasets that contain accuracy measures.      \"   best.fit=NULL   families.fit=NULL   agreement.clmplus=NULL   agreement.apc=NULL   choices.clmplus=NULL   choices.apc=NULL      for(df.ix in names(list.of.datasets)){     cat(paste0(\".. Comparison on dataset: \",df.ix))     out.ix = modelcomparison.1d(list.of.datasets[[df.ix]])          best.of.the.bests.df=best.of.the.bests(out.ix$best.model.clmplus,                                         out.ix$best.model.apc)          out.ix$best.model.clmplus['package']= 'clmplus'     out.ix$best.model.apc['package']= 'apc'     best.of.the.bests.df['package']='overall.best'          best.fit=rbind(best.fit,                    out.ix$best.model.clmplus,                    out.ix$best.model.apc,                    best.of.the.bests.df)          families.fit=rbind(families.fit,                    out.ix$comparison.df)          agreement.clmplus=rbind(agreement.clmplus,                          out.ix$agreement.frame.clmplus)          agreement.apc=rbind(agreement.apc,                          out.ix$agreement.frame.apc)          choices.clmplus=rbind(choices.clmplus,                          out.ix$choices.frame.clmplus)          choices.apc=rbind(choices.apc,                          out.ix$choices.frame.apc)   }      best.fit[,1:4]=apply(best.fit[,1:4],MARGIN = 2,FUN = as.numeric)      families.fit[,c('mre',                   'error.incidence',                   'rmse',                   'mae')]=apply(                     families.fit[,c('mre',                                     'error.incidence',                                     'rmse',                                     'mae')],                     MARGIN = 2,                     FUN = as.numeric)         out = list(best.fit=best.fit,              families.fit=families.fit,              agreement.clmplus=agreement.clmplus,              agreement.apc=agreement.apc,              choices.clmplus=choices.clmplus,              choices.apc=choices.apc)      return(out)    } bake.off <- function(models.comparison){   \"   This function plots out the results from the previous computations.       It takes as input the resulting dataframes of model.comparison.      The output is the boxplots of the paper's bake-off section.       \"      # browser()      p1<- models.comparison$best.fit[,c(\"rmse\",\"mae\",\"package\")] %>%     tidyr::pivot_longer(-c(package)) %>%     ggplot(aes(x=package,y=value))+     geom_boxplot()+     facet_wrap(.~name,nrow = 1,strip.position = 'bottom')+     theme_bw()+     theme(strip.placement = 'outside',strip.background = element_blank())      p2<- models.comparison$best.fit[,c(\"mre\",\"error.incidence\",\"package\")] %>%     tidyr::pivot_longer(-c(package)) %>%     ggplot(aes(x=package,y=value))+     geom_boxplot()+     facet_wrap(.~name,nrow = 1,strip.position = 'bottom')+     theme_bw()+     theme(strip.placement = 'outside',strip.background = element_blank())       abs.best=models.comparison$best.fit[,c(\"mre\",\"error.incidence\",\"package\")]   abs.best[,c(\"mre\",\"error.incidence\")]=apply(abs.best[,c(\"mre\",\"error.incidence\")],                                               MARGIN=2,                                               FUN=abs)   p3<- abs.best %>%     tidyr::pivot_longer(-c(package)) %>%     ggplot(aes(x=package,y=value))+     geom_boxplot()+     facet_wrap(.~name,nrow = 1,strip.position = 'bottom')+     theme_bw()+     theme(strip.placement = 'outside',strip.background = element_blank())      only.ei=models.comparison$best.fit[,c(\"error.incidence\",\"package\")]   only.ei[,c(\"error.incidence\")]=abs(only.ei[,c(\"error.incidence\")])      p4<- abs.best %>%   tidyr::pivot_longer(-c(package)) %>%   ggplot(aes(x=package,y=value))+   geom_boxplot()+   # facet_wrap(.~name,nrow = 1,strip.position = 'bottom')+   theme_bw()+   theme(strip.placement = 'outside',strip.background = element_blank())         out = list(p1=p1,              p2=p2,              p3=p3,              p4=p4)      return(out) }"},{"path":[]},{"path":"https://gpitt71.github.io/clmplus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gabriele Pittarello. Author, maintainer, copyright holder. Munir Hiabu. Author, copyright holder. Andres Villegas. Author, copyright holder.","code":""},{"path":"https://gpitt71.github.io/clmplus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pittarello G, Hiabu M, Villegas (2025). clmplus: Tool-Box Chain Ladder Plus Models. R package version 1.0.0, https://gpitt71.github.io/clmplus/, https://github.com/gpitt71/clmplus.","code":"@Manual{,   title = {clmplus: Tool-Box of Chain Ladder Plus Models},   author = {Gabriele Pittarello and Munir Hiabu and Andres Villegas},   year = {2025},   note = {R package version 1.0.0,     https://gpitt71.github.io/clmplus/},   url = {https://github.com/gpitt71/clmplus}, }"},{"path":"https://gpitt71.github.io/clmplus/index.html","id":"clmplus","dir":"","previous_headings":"","what":"Tool-Box of Chain Ladder Plus Models","title":"Tool-Box of Chain Ladder Plus Models","text":"clmplus R package implementing age-period-cohort models claim development presented manuscript ‘Replicating extending chain-ladder via age-period-cohort structure claim development run-triangle’ doi:10.1080/10920277.2025.249672.","code":""},{"path":"https://gpitt71.github.io/clmplus/index.html","id":"our-models","dir":"","previous_headings":"","what":"Our models","title":"Tool-Box of Chain Ladder Plus Models","text":"models claim development available clmplus based models human mortality implemented StMoMo package. Users can either rely default models set configuration claim development.","code":""},{"path":"https://gpitt71.github.io/clmplus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tool-Box of Chain Ladder Plus Models","text":"developer version clmplus can installed GitHub. current version clmplus can installed CRAN.","code":"library(devtools) devtools::install_github(\"gpitt71/clmplus\") install.packages('clmplus')"},{"path":"https://gpitt71.github.io/clmplus/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get Started","title":"Tool-Box of Chain Ladder Plus Models","text":"brief example, work sifa.mtpl data clmplus package. examples can found package vignettes. data set cumulative claim payments transformed AggregateDataPP object pre-processes data claim development modelling. models can fit clmplus function. plot function can used explore scaled deviance residuals fitted models. , example age-period-cohort (apc) model claim development. Predictions performed predict function. fitted effect (extrapolated) effects can inspected plot function. continue example apc model.","code":"library(clmplus)  data (\"sifa.mtpl\") dataset = sifa.mtpl datapp = AggregateDataPP(cumulative.payments.triangle = dataset, eta= 1/2) a.model.fit=clmplus(datapp,                  hazard.model = \"a\") # age-model replicates the chain ladder  ac.model.fit=clmplus(datapp,                  hazard.model = \"ac\")  ap.model.fit=clmplus(datapp,                  hazard.model = \"ap\")  apc.model.fit=clmplus(datapp,                   hazard.model = \"apc\") plot(apc.model.fit) a.model=predict(a.model.fit)  # clmplus reserve (age model) sum(a.model$reserve) #226875.5   ac.model=predict(ac.model.fit,                  gk.fc.model = 'a',                  gk.order = c(1,1,0))  # clmplus reserve (age-cohort model) sum(ac.model$reserve) #205305.7  ap.model= predict(ap.model.fit,                  ckj.fc.model = 'a',                  ckj.order = c(0,1,0))  # clmplus reserve (age-period model) sum(ap.model$reserve) #215602.8   apc.model= predict(apc.model.fit,                   gk.fc.model = 'a',                   ckj.fc.model = 'a',                   gk.order = c(1,1,0),                   ckj.order = c(0,1,0)) # clmplus reserve (age-period-cohort model) sum(apc.model$reserve) #213821.6 plot(apc.model)"},{"path":"https://gpitt71.github.io/clmplus/reference/AggregateDataPP.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-process Run-Off Triangles — AggregateDataPP","title":"Pre-process Run-Off Triangles — AggregateDataPP","text":"Pre-process Run-Triangles.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/AggregateDataPP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-process Run-Off Triangles — AggregateDataPP","text":"","code":"AggregateDataPP(   cumulative.payments.triangle,   entries.weights = NULL,   eta = 1/2 )"},{"path":"https://gpitt71.github.io/clmplus/reference/AggregateDataPP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-process Run-Off Triangles — AggregateDataPP","text":"cumulative.payments.triangle triangle matrix matrix array object, input triangle cumulative payments. entries.weights triangle matrix matrix array model entries weights. eta numeric, individual claims exposure cell, also known lost exposure. must interval (0,1].","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/AggregateDataPP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-process Run-Off Triangles — AggregateDataPP","text":"object class AggregateDataPP. Lists following elements: cumulative.payments.triangle triangle matrix object, input triangle cumulative payments. occurrance matrix array object, occurrence derived input triangle. exposure matrix array object, exposure derived input triangle, eta claims arrival assumption. incremental.payments.triangle triangle matrix object, incremental payments derived input. fit.w matrix array object, weights used estimation. J integer, Run-triangle dimension. diagonal numeric, cumulative payments last diagonal. eta numeric, Expected time--event cell. .e., lost exposure.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/AggregateDataPP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pre-process Run-Off Triangles — AggregateDataPP","text":"Pittarello, G., Hiabu, M., & Villegas, . M. (2023). Replicating extending chain-ladder via age-period-cohort structure claim development run-triangle. arXiv preprint arXiv:2301.03858.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/AggregateDataPP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre-process Run-Off Triangles — AggregateDataPP","text":"","code":"data(sifa.mtpl) sifa.mtpl.rtt <- AggregateDataPP(cumulative.payments.triangle=sifa.mtpl)"},{"path":"https://gpitt71.github.io/clmplus/reference/amases.gtpl.html","id":null,"dir":"Reference","previous_headings":"","what":"Amases GTPL — amases.gtpl","title":"Amases GTPL — amases.gtpl","text":"Dataset cumulative paid claims small italian company line business: general third party liability.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/amases.gtpl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Amases GTPL — amases.gtpl","text":"","code":"amases.gtpl"},{"path":"https://gpitt71.github.io/clmplus/reference/amases.gtpl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Amases GTPL — amases.gtpl","text":"Run-triangle 12 development periods.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/amases.gtpl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Amases GTPL — amases.gtpl","text":"Savelli, Nino,  Clemente, Gian Paolo. \"Lezioni di matematica attuariale delle assicurazioni danni.\" EDUCatt-Ente per il diritto allo studio universitario dell'Università Cattolica, 2014","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/amases.mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Amases MOD — amases.mod","title":"Amases MOD — amases.mod","text":"Dataset cumulative paid claims small italian company line business: motor damage.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/amases.mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Amases MOD — amases.mod","text":"","code":"amases.mod"},{"path":"https://gpitt71.github.io/clmplus/reference/amases.mod.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Amases MOD — amases.mod","text":"Run-triangle 12 development periods.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/amases.mod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Amases MOD — amases.mod","text":"Savelli, Nino, Clemente, Gian Paolo. \"Lezioni di matematica attuariale delle assicurazioni danni.\" EDUCatt-Ente per il diritto allo studio universitario dell'Università Cattolica, 2014","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/amases.mtpl.html","id":null,"dir":"Reference","previous_headings":"","what":"Amases MTPL — amases.mtpl","title":"Amases MTPL — amases.mtpl","text":"Dataset cumulative paid claims small italian company line business: motor third party liability.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/amases.mtpl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Amases MTPL — amases.mtpl","text":"","code":"amases.mtpl"},{"path":"https://gpitt71.github.io/clmplus/reference/amases.mtpl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Amases MTPL — amases.mtpl","text":"Run-triangle 12 development periods.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/amases.mtpl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Amases MTPL — amases.mtpl","text":"Savelli, Nino, Clemente, Gian Paolo. \"Lezioni di matematica attuariale delle assicurazioni danni.\" EDUCatt-Ente per il diritto allo studio universitario dell'Università Cattolica, 2014","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.AggregateDataPP.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.AggregateDataPP","title":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.AggregateDataPP","text":"Method fit Chain Ladder plus models AggregateDataPP objects.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.AggregateDataPP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.AggregateDataPP","text":"","code":"# S3 method for class 'AggregateDataPP' clmplus(   AggregateDataPP,   hazard.model = NULL,   link = c(\"log\", \"logit\"),   staticAgeFun = TRUE,   periodAgeFun = \"NP\",   cohortAgeFun = NULL,   effect_log_scale = TRUE,   constFun = function(ax, bx, kt, b0x, gc, wxt, ages) list(ax = ax, bx = bx, kt = kt, b0x     = b0x, gc = gc),   ... )"},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.AggregateDataPP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.AggregateDataPP","text":"AggregateDataPP AggregateDataPP object, reverse time triangle fitted. hazard.model character, hazard model supported package. model can chosen : '': Age model, equivalent Mack chain-ladder. 'ac': Age cohort effects. 'ap': Age cohort effects. 'apc': Age cohort period effects. link character, defines link function random component associated mortality model. \"log\" assume deaths follow Poisson distribution use log link \"logit\" assume deaths follow Binomial distribution logit link. disregarded unless practitioner specifies hazard model StMoMo. staticAgeFun logical, indicates static age function \\(\\alpha_x\\) included. disregarded unless practitioner specifies hazard model StMoMo. periodAgeFun list, list length \\(N\\) definitions period age modulating parameters \\(\\beta_x^{()}\\). entry can take values: \"NP\" non-parametric age terms, \"1\" \\(\\beta_x^{()}=1\\) predefined parametric function age (see details). Set NULL period terms model. disregarded unless practitioner specifies hazard model StMoMo. cohortAgeFun character function, defines cohort age modulating parameter \\(\\beta_x^{(0)}\\). can take values: \"NP\" non-parametric age terms, \"1\" \\(\\beta_x^{(0)}=1\\), predefined parametric function age (see details) NULL cohort effect. disregarded unless practitioner specifies hazard model StMoMo. effect_log_scale logical, whether effects logarithmic scale. default, TRUE. constFun function, defines identifiability constraints model. must function form constFun <- function(ax, bx, kt, b0x, gc, wxt, ages) taking set fitted model parameters returning list list(ax = ax, bx = bx, kt = kt, b0x = b0x, gc = gc) model parameters identifiability constraints applied. omitted identifiability constraints applied model. disregarded unless practitioner specifies hazard model StMoMo. ... parameters passed clmplus.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.AggregateDataPP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.AggregateDataPP","text":"object class clmplusmodel. list following elements: model.fit fitStMoMo object, specified hazard model fit StMoMo. apc_input list object. list containing following model inputs age-period-cohort notation: J (integer) Run-triangle dimension.  eta (numeric) Expected time--event cell. .e., lost exposure.   diagonal (numeric) Cumulative payments last diagonal. hazard.model (character), hazard model specified user. Set user.specific custom model passed. hazard_scaled_deviance_residuals matrix array Triangle scaled deviance residuals. fitted_development_factors matrix array Triangle fitted development factors. fitted_effects list List development-accident-calendar effects fitted.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.AggregateDataPP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.AggregateDataPP","text":"Pittarello, Gabriele, Munir Hiabu, Andrés M. Villegas. \"Replicating extending chain ladder via age-period-cohort structure claim development run-triangle.\" arXiv preprint arXiv:2301.03858 (2023).","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.AggregateDataPP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.AggregateDataPP","text":"","code":"data(sifa.mtpl) sifa.mtpl.rtt <- AggregateDataPP(cumulative.payments.triangle=sifa.mtpl) hz.chl=clmplus(sifa.mtpl.rtt, 'a') #> Warning: StMoMo: 66 missing values which have been zero weighted #> StMoMo: The following ages have been zero weighted: 1  #> StMoMo: The following years have been zero weighted: 1  #> StMoMo: The following cohorts have been zero weighted: -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 11  #> StMoMo: Start fitting with gnm #> Warning: non-integer x = 860.063891 #> Warning: non-integer x = 458.156066 #> Warning: non-integer x = 559.340054 #> Warning: non-integer x = 281.869679 #> Warning: non-integer x = 456.270650 #> Warning: non-integer x = 727.142070 #> Warning: non-integer x = 49353.589600 #> Warning: non-integer x = 50605.820000 #> Warning: non-integer x = 29251.193380 #> Warning: non-integer x = 36106.295210 #> Warning: non-integer x = 40125.390780 #> Warning: non-integer x = 44498.942240 #> Warning: non-integer x = 45490.189570 #> Warning: non-integer x = 48040.321560 #> Warning: non-integer x = 49991.357650 #> Warning: non-integer x = 49694.294990 #> Warning: non-integer x = 20880.666980 #> Warning: non-integer x = 18304.246140 #> Warning: non-integer x = 18603.713030 #> Warning: non-integer x = 12463.983790 #> Warning: non-integer x = 13441.333110 #> Warning: non-integer x = 12951.176400 #> Warning: non-integer x = 15370.423630 #> Warning: non-integer x = 15339.426370 #> Warning: non-integer x = 17842.901760 #> Warning: non-integer x = 19570.203660 #> Warning: non-integer x = 10047.067150 #> Warning: non-integer x = 8201.559214 #> Warning: non-integer x = 8833.487780 #> Warning: non-integer x = 5144.085289 #> Warning: non-integer x = 5868.234632 #> Warning: non-integer x = 6033.755464 #> Warning: non-integer x = 5593.853546 #> Warning: non-integer x = 5478.076757 #> Warning: non-integer x = 7035.199194 #> Warning: non-integer x = 3933.606063 #> Warning: non-integer x = 5749.890057 #> Warning: non-integer x = 4714.168250 #> Warning: non-integer x = 2726.947823 #> Warning: non-integer x = 2881.972323 #> Warning: non-integer x = 3009.655856 #> Warning: non-integer x = 2615.516340 #> Warning: non-integer x = 2540.639658 #> Warning: non-integer x = 2906.368627 #> Warning: non-integer x = 2725.682936 #> Warning: non-integer x = 3312.691467 #> Warning: non-integer x = 2359.362462 #> Warning: non-integer x = 2421.987896 #> Warning: non-integer x = 1264.396267 #> Warning: non-integer x = 1984.311792 #> Warning: non-integer x = 2136.804699 #> Warning: non-integer x = 1294.338023 #> Warning: non-integer x = 2266.599873 #> Warning: non-integer x = 1333.856105 #> Warning: non-integer x = 918.004039 #> Warning: non-integer x = 1249.952517 #> Warning: non-integer x = 1134.706143 #> Warning: non-integer x = 1184.355428 #> Warning: non-integer x = 1124.336355 #> Warning: non-integer x = 1238.429974 #> Warning: non-integer x = 1075.978340 #> Warning: non-integer x = 733.741025 #> Warning: non-integer x = 904.371165 #> Warning: non-integer x = 872.633331 #> Warning: non-integer x = 941.440475 #> StMoMo: Finish fitting with gnm"},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.default","title":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.default","text":"Default method fit Chain Ladder plus models.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.default","text":"","code":"# Default S3 method clmplus(   AggregateDataPP,   hazard.model = NULL,   link = c(\"log\", \"logit\"),   staticAgeFun = TRUE,   periodAgeFun = \"NP\",   cohortAgeFun = NULL,   effect_log_scale = TRUE,   constFun = function(ax, bx, kt, b0x, gc, wxt, ages) list(ax = ax, bx = bx, kt = kt, b0x     = b0x, gc = gc),   ... )"},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.default","text":"AggregateDataPP AggregateDataPP object, reverse time triangle fitted. hazard.model character, hazard model supported package. model can chosen : '': Age model, equivalent Mack chain-ladder. 'ac': Age cohort effects. 'ap': Age cohort effects. 'apc': Age cohort period effects. link character, defines link function random component associated mortality model. \"log\" assume deaths follow Poisson distribution use log link \"logit\" assume deaths follow Binomial distribution logit link. disregarded unless practitioner specifies hazard model StMoMo. staticAgeFun logical, indicates static age function \\(\\alpha_x\\) included. disregarded unless practitioner specifies hazard model StMoMo. periodAgeFun list, list length \\(N\\) definitions period age modulating parameters \\(\\beta_x^{()}\\). entry can take values: \"NP\" non-parametric age terms, \"1\" \\(\\beta_x^{()}=1\\) predefined parametric function age (see details). Set NULL period terms model. disregarded unless practitioner specifies hazard model StMoMo. cohortAgeFun character function, defines cohort age modulating parameter \\(\\beta_x^{(0)}\\). can take values: \"NP\" non-parametric age terms, \"1\" \\(\\beta_x^{(0)}=1\\), predefined parametric function age (see details) NULL cohort effect. disregarded unless practitioner specifies hazard model StMoMo. effect_log_scale logical, whether effects logarithmic scale. default, TRUE. constFun function, defines identifiability constraints model. must function form constFun <- function(ax, bx, kt, b0x, gc, wxt, ages) taking set fitted model parameters returning list list(ax = ax, bx = bx, kt = kt, b0x = b0x, gc = gc) model parameters identifiability constraints applied. omitted identifiability constraints applied model. disregarded unless practitioner specifies hazard model StMoMo. ... parameters passed clmplus.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.default","text":"return value, called pass method clmplus.AggregateDataPP. See clmplus.AggregateDataPP documentation.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.default.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit Chain Ladder Plus to reverse time triangles. — clmplus.default","text":"Pittarello, Gabriele, Munir Hiabu, Andrés M. Villegas. \"Replicating extending chain ladder via age-period-cohort structure claim development run-triangle.\" arXiv preprint arXiv:2301.03858 (2023). Hiabu, Munir. “relationship classical chain ladder granular reserving.” Scandinavian Actuarial Journal 2017 (2017): 708 - 729.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Chain Ladder plus on Run-off Triangles. — clmplus","title":"Fit Chain Ladder plus on Run-off Triangles. — clmplus","text":"Method Estimate Chain Ladder plus models.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Chain Ladder plus on Run-off Triangles. — clmplus","text":"","code":"clmplus(   AggregateDataPP,   hazard.model = NULL,   link = c(\"log\", \"logit\"),   staticAgeFun = TRUE,   periodAgeFun = \"NP\",   cohortAgeFun = NULL,   effect_log_scale = TRUE,   constFun = function(ax, bx, kt, b0x, gc, wxt, ages) list(ax = ax, bx = bx, kt = kt, b0x     = b0x, gc = gc),   ... )"},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Chain Ladder plus on Run-off Triangles. — clmplus","text":"AggregateDataPP AggregateDataPP object, reverse time triangle fitted. hazard.model character, hazard model supported package. model can chosen : '': Age model, equivalent Mack chain-ladder. 'ac': Age cohort effects. 'ap': Age cohort effects. 'apc': Age cohort period effects. link character, defines link function random component associated mortality model. \"log\" assume deaths follow Poisson distribution use log link \"logit\" assume deaths follow Binomial distribution logit link. disregarded unless practitioner specifies hazard model StMoMo. staticAgeFun logical, indicates static age function \\(\\alpha_x\\) included. disregarded unless practitioner specifies hazard model StMoMo. periodAgeFun list, list length \\(N\\) definitions period age modulating parameters \\(\\beta_x^{()}\\). entry can take values: \"NP\" non-parametric age terms, \"1\" \\(\\beta_x^{()}=1\\) predefined parametric function age (see details). Set NULL period terms model. disregarded unless practitioner specifies hazard model StMoMo. cohortAgeFun character function, defines cohort age modulating parameter \\(\\beta_x^{(0)}\\). can take values: \"NP\" non-parametric age terms, \"1\" \\(\\beta_x^{(0)}=1\\), predefined parametric function age (see details) NULL cohort effect. disregarded unless practitioner specifies hazard model StMoMo. effect_log_scale logical, whether effects logarithmic scale. default, TRUE. constFun function, defines identifiability constraints model. must function form constFun <- function(ax, bx, kt, b0x, gc, wxt, ages) taking set fitted model parameters returning list list(ax = ax, bx = bx, kt = kt, b0x = b0x, gc = gc) model parameters identifiability constraints applied. omitted identifiability constraints applied model. disregarded unless practitioner specifies hazard model StMoMo. ... parameters passed clmplus.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Chain Ladder plus on Run-off Triangles. — clmplus","text":"return value, called pass method clmplus.AggregateDataPP. See clmplus.AggregateDataPP documentation.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit Chain Ladder plus on Run-off Triangles. — clmplus","text":"Pittarello, Gabriele, Munir Hiabu, Andrés M. Villegas. \"Replicating extending chain ladder via age-period-cohort structure claim development run-triangle.\" arXiv preprint arXiv:2301.03858 (2023).","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/clmplus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Chain Ladder plus on Run-off Triangles. — clmplus","text":"","code":"data(sifa.mtpl) sifa.mtpl.rtt <- AggregateDataPP(cumulative.payments.triangle=sifa.mtpl) hz.chl=clmplus(sifa.mtpl.rtt, 'a') #> Warning: StMoMo: 66 missing values which have been zero weighted #> StMoMo: The following ages have been zero weighted: 1  #> StMoMo: The following years have been zero weighted: 1  #> StMoMo: The following cohorts have been zero weighted: -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 11  #> StMoMo: Start fitting with gnm #> Warning: non-integer x = 860.063891 #> Warning: non-integer x = 458.156066 #> Warning: non-integer x = 559.340054 #> Warning: non-integer x = 281.869679 #> Warning: non-integer x = 456.270650 #> Warning: non-integer x = 727.142070 #> Warning: non-integer x = 49353.589600 #> Warning: non-integer x = 50605.820000 #> Warning: non-integer x = 29251.193380 #> Warning: non-integer x = 36106.295210 #> Warning: non-integer x = 40125.390780 #> Warning: non-integer x = 44498.942240 #> Warning: non-integer x = 45490.189570 #> Warning: non-integer x = 48040.321560 #> Warning: non-integer x = 49991.357650 #> Warning: non-integer x = 49694.294990 #> Warning: non-integer x = 20880.666980 #> Warning: non-integer x = 18304.246140 #> Warning: non-integer x = 18603.713030 #> Warning: non-integer x = 12463.983790 #> Warning: non-integer x = 13441.333110 #> Warning: non-integer x = 12951.176400 #> Warning: non-integer x = 15370.423630 #> Warning: non-integer x = 15339.426370 #> Warning: non-integer x = 17842.901760 #> Warning: non-integer x = 19570.203660 #> Warning: non-integer x = 10047.067150 #> Warning: non-integer x = 8201.559214 #> Warning: non-integer x = 8833.487780 #> Warning: non-integer x = 5144.085289 #> Warning: non-integer x = 5868.234632 #> Warning: non-integer x = 6033.755464 #> Warning: non-integer x = 5593.853546 #> Warning: non-integer x = 5478.076757 #> Warning: non-integer x = 7035.199194 #> Warning: non-integer x = 3933.606063 #> Warning: non-integer x = 5749.890057 #> Warning: non-integer x = 4714.168250 #> Warning: non-integer x = 2726.947823 #> Warning: non-integer x = 2881.972323 #> Warning: non-integer x = 3009.655856 #> Warning: non-integer x = 2615.516340 #> Warning: non-integer x = 2540.639658 #> Warning: non-integer x = 2906.368627 #> Warning: non-integer x = 2725.682936 #> Warning: non-integer x = 3312.691467 #> Warning: non-integer x = 2359.362462 #> Warning: non-integer x = 2421.987896 #> Warning: non-integer x = 1264.396267 #> Warning: non-integer x = 1984.311792 #> Warning: non-integer x = 2136.804699 #> Warning: non-integer x = 1294.338023 #> Warning: non-integer x = 2266.599873 #> Warning: non-integer x = 1333.856105 #> Warning: non-integer x = 918.004039 #> Warning: non-integer x = 1249.952517 #> Warning: non-integer x = 1134.706143 #> Warning: non-integer x = 1184.355428 #> Warning: non-integer x = 1124.336355 #> Warning: non-integer x = 1238.429974 #> Warning: non-integer x = 1075.978340 #> Warning: non-integer x = 733.741025 #> Warning: non-integer x = 904.371165 #> Warning: non-integer x = 872.633331 #> Warning: non-integer x = 941.440475 #> StMoMo: Finish fitting with gnm"},{"path":"https://gpitt71.github.io/clmplus/reference/plot.AggregateDataPP.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the payments behavior — plot.AggregateDataPP","title":"Plot the payments behavior — plot.AggregateDataPP","text":"function allows define behavior triangle payments.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/plot.AggregateDataPP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the payments behavior — plot.AggregateDataPP","text":"","code":"# S3 method for class 'AggregateDataPP' plot(x, ...)"},{"path":"https://gpitt71.github.io/clmplus/reference/plot.AggregateDataPP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the payments behavior — plot.AggregateDataPP","text":"x AggregateDataPP plotted. ... Arguments passed plot.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/plot.AggregateDataPP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the payments behavior — plot.AggregateDataPP","text":"return value, plots run-triangle cumulative payments incremental payments.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/plot.AggregateDataPP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot the payments behavior — plot.AggregateDataPP","text":"Pittarello, Gabriele, Munir Hiabu, Andrés M. Villegas. \"Replicating extending chain ladder via age-period-cohort structure claim development run-triangle.\" arXiv preprint arXiv:2301.03858 (2023).","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/plot.AggregateDataPP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the payments behavior — plot.AggregateDataPP","text":"","code":"data(sifa.mtpl) sifa.mtpl.pp <- AggregateDataPP(cumulative.payments.triangle=sifa.mtpl) plot(sifa.mtpl.pp) #> Warning: Removed 66 rows containing missing values or values outside the scale range #> (`geom_line()`). #> Warning: Removed 66 rows containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"https://gpitt71.github.io/clmplus/reference/plot.clmplusmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the hazard model residuals — plot.clmplusmodel","title":"Plot the hazard model residuals — plot.clmplusmodel","text":"function allows plot hazard model residuals triangle payments.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/plot.clmplusmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the hazard model residuals — plot.clmplusmodel","text":"","code":"# S3 method for class 'clmplusmodel' plot(x, heat.lim = c(-2.5, 2.5), ...)"},{"path":"https://gpitt71.github.io/clmplus/reference/plot.clmplusmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the hazard model residuals — plot.clmplusmodel","text":"x clmplusmodel object, model fit plot. heat.lim limits residuals plot. ... Extra arguments passed plot function.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/plot.clmplusmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the hazard model residuals — plot.clmplusmodel","text":"return value, plots hazard model residuals triangular form.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/plot.clmplusmodel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot the hazard model residuals — plot.clmplusmodel","text":"Pittarello, Gabriele, Munir Hiabu, Andrés M. Villegas. \"Replicating extending chain ladder via age-period-cohort structure claim development run-triangle.\" arXiv preprint arXiv:2301.03858 (2023).","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/plot.clmplusmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the hazard model residuals — plot.clmplusmodel","text":"","code":"data(sifa.mtpl) sifa.mtpl.rtt <- AggregateDataPP(cumulative.payments.triangle=sifa.mtpl) clm.fit<-clmplus(sifa.mtpl.rtt, 'a') #> Warning: StMoMo: 66 missing values which have been zero weighted #> StMoMo: The following ages have been zero weighted: 1  #> StMoMo: The following years have been zero weighted: 1  #> StMoMo: The following cohorts have been zero weighted: -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 11  #> StMoMo: Start fitting with gnm #> Warning: non-integer x = 860.063891 #> Warning: non-integer x = 458.156066 #> Warning: non-integer x = 559.340054 #> Warning: non-integer x = 281.869679 #> Warning: non-integer x = 456.270650 #> Warning: non-integer x = 727.142070 #> Warning: non-integer x = 49353.589600 #> Warning: non-integer x = 50605.820000 #> Warning: non-integer x = 29251.193380 #> Warning: non-integer x = 36106.295210 #> Warning: non-integer x = 40125.390780 #> Warning: non-integer x = 44498.942240 #> Warning: non-integer x = 45490.189570 #> Warning: non-integer x = 48040.321560 #> Warning: non-integer x = 49991.357650 #> Warning: non-integer x = 49694.294990 #> Warning: non-integer x = 20880.666980 #> Warning: non-integer x = 18304.246140 #> Warning: non-integer x = 18603.713030 #> Warning: non-integer x = 12463.983790 #> Warning: non-integer x = 13441.333110 #> Warning: non-integer x = 12951.176400 #> Warning: non-integer x = 15370.423630 #> Warning: non-integer x = 15339.426370 #> Warning: non-integer x = 17842.901760 #> Warning: non-integer x = 19570.203660 #> Warning: non-integer x = 10047.067150 #> Warning: non-integer x = 8201.559214 #> Warning: non-integer x = 8833.487780 #> Warning: non-integer x = 5144.085289 #> Warning: non-integer x = 5868.234632 #> Warning: non-integer x = 6033.755464 #> Warning: non-integer x = 5593.853546 #> Warning: non-integer x = 5478.076757 #> Warning: non-integer x = 7035.199194 #> Warning: non-integer x = 3933.606063 #> Warning: non-integer x = 5749.890057 #> Warning: non-integer x = 4714.168250 #> Warning: non-integer x = 2726.947823 #> Warning: non-integer x = 2881.972323 #> Warning: non-integer x = 3009.655856 #> Warning: non-integer x = 2615.516340 #> Warning: non-integer x = 2540.639658 #> Warning: non-integer x = 2906.368627 #> Warning: non-integer x = 2725.682936 #> Warning: non-integer x = 3312.691467 #> Warning: non-integer x = 2359.362462 #> Warning: non-integer x = 2421.987896 #> Warning: non-integer x = 1264.396267 #> Warning: non-integer x = 1984.311792 #> Warning: non-integer x = 2136.804699 #> Warning: non-integer x = 1294.338023 #> Warning: non-integer x = 2266.599873 #> Warning: non-integer x = 1333.856105 #> Warning: non-integer x = 918.004039 #> Warning: non-integer x = 1249.952517 #> Warning: non-integer x = 1134.706143 #> Warning: non-integer x = 1184.355428 #> Warning: non-integer x = 1124.336355 #> Warning: non-integer x = 1238.429974 #> Warning: non-integer x = 1075.978340 #> Warning: non-integer x = 733.741025 #> Warning: non-integer x = 904.371165 #> Warning: non-integer x = 872.633331 #> Warning: non-integer x = 941.440475 #> StMoMo: Finish fitting with gnm plot(clm.fit)"},{"path":"https://gpitt71.github.io/clmplus/reference/plot.clmpluspredictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the hazard model fitted and forecasted parameters — plot.clmpluspredictions","title":"Plot the hazard model fitted and forecasted parameters — plot.clmpluspredictions","text":"function allows define behavior triangle payments.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/plot.clmpluspredictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the hazard model fitted and forecasted parameters — plot.clmpluspredictions","text":"","code":"# S3 method for class 'clmpluspredictions' plot(x, cy.type = \"fe\", ...)"},{"path":"https://gpitt71.github.io/clmplus/reference/plot.clmpluspredictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the hazard model fitted and forecasted parameters — plot.clmpluspredictions","text":"x clmpluspredictions, Model effects (fitted extrapolated) plotted. cy.type character, whether show fitted period effect without extrapolatio Default \"fe\", standing fitted extrapolated. Alternative specify \"f\" fitted effect. ... Arguments passed plot.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/plot.clmpluspredictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the hazard model fitted and forecasted parameters — plot.clmpluspredictions","text":"return value, plots coefficients hazard models.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/plot.clmpluspredictions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot the hazard model fitted and forecasted parameters — plot.clmpluspredictions","text":"Pittarello, G., Hiabu, M., & Villegas, . M. (2023). Replicating extending chain-ladder via age-period-cohort structure claim development run-triangle. arXiv preprint arXiv:2301.03858.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/plot.clmpluspredictions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the hazard model fitted and forecasted parameters — plot.clmpluspredictions","text":"","code":"data(sifa.mtpl) sifa.mtpl.rtt <- AggregateDataPP(cumulative.payments.triangle=sifa.mtpl) clm.fit<-clmplus(sifa.mtpl.rtt, 'a') #> Warning: StMoMo: 66 missing values which have been zero weighted #> StMoMo: The following ages have been zero weighted: 1  #> StMoMo: The following years have been zero weighted: 1  #> StMoMo: The following cohorts have been zero weighted: -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 11  #> StMoMo: Start fitting with gnm #> Warning: non-integer x = 860.063891 #> Warning: non-integer x = 458.156066 #> Warning: non-integer x = 559.340054 #> Warning: non-integer x = 281.869679 #> Warning: non-integer x = 456.270650 #> Warning: non-integer x = 727.142070 #> Warning: non-integer x = 49353.589600 #> Warning: non-integer x = 50605.820000 #> Warning: non-integer x = 29251.193380 #> Warning: non-integer x = 36106.295210 #> Warning: non-integer x = 40125.390780 #> Warning: non-integer x = 44498.942240 #> Warning: non-integer x = 45490.189570 #> Warning: non-integer x = 48040.321560 #> Warning: non-integer x = 49991.357650 #> Warning: non-integer x = 49694.294990 #> Warning: non-integer x = 20880.666980 #> Warning: non-integer x = 18304.246140 #> Warning: non-integer x = 18603.713030 #> Warning: non-integer x = 12463.983790 #> Warning: non-integer x = 13441.333110 #> Warning: non-integer x = 12951.176400 #> Warning: non-integer x = 15370.423630 #> Warning: non-integer x = 15339.426370 #> Warning: non-integer x = 17842.901760 #> Warning: non-integer x = 19570.203660 #> Warning: non-integer x = 10047.067150 #> Warning: non-integer x = 8201.559214 #> Warning: non-integer x = 8833.487780 #> Warning: non-integer x = 5144.085289 #> Warning: non-integer x = 5868.234632 #> Warning: non-integer x = 6033.755464 #> Warning: non-integer x = 5593.853546 #> Warning: non-integer x = 5478.076757 #> Warning: non-integer x = 7035.199194 #> Warning: non-integer x = 3933.606063 #> Warning: non-integer x = 5749.890057 #> Warning: non-integer x = 4714.168250 #> Warning: non-integer x = 2726.947823 #> Warning: non-integer x = 2881.972323 #> Warning: non-integer x = 3009.655856 #> Warning: non-integer x = 2615.516340 #> Warning: non-integer x = 2540.639658 #> Warning: non-integer x = 2906.368627 #> Warning: non-integer x = 2725.682936 #> Warning: non-integer x = 3312.691467 #> Warning: non-integer x = 2359.362462 #> Warning: non-integer x = 2421.987896 #> Warning: non-integer x = 1264.396267 #> Warning: non-integer x = 1984.311792 #> Warning: non-integer x = 2136.804699 #> Warning: non-integer x = 1294.338023 #> Warning: non-integer x = 2266.599873 #> Warning: non-integer x = 1333.856105 #> Warning: non-integer x = 918.004039 #> Warning: non-integer x = 1249.952517 #> Warning: non-integer x = 1134.706143 #> Warning: non-integer x = 1184.355428 #> Warning: non-integer x = 1124.336355 #> Warning: non-integer x = 1238.429974 #> Warning: non-integer x = 1075.978340 #> Warning: non-integer x = 733.741025 #> Warning: non-integer x = 904.371165 #> Warning: non-integer x = 872.633331 #> Warning: non-integer x = 941.440475 #> StMoMo: Finish fitting with gnm clm <- predict(clm.fit) plot(clm) #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"https://gpitt71.github.io/clmplus/reference/predict.clmplusmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict the Reserve using Chain Ladder Plus Models — predict.clmplusmodel","title":"Predict the Reserve using Chain Ladder Plus Models — predict.clmplusmodel","text":"Predict lower triangle clmplus model.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/predict.clmplusmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict the Reserve using Chain Ladder Plus Models — predict.clmplusmodel","text":"","code":"# S3 method for class 'clmplusmodel' predict(   object,   gk.fc.model = \"a\",   ckj.fc.model = \"a\",   gk.order = c(1, 1, 0),   ckj.order = c(0, 1, 0),   forecasting_horizon = NULL,   ... )"},{"path":"https://gpitt71.github.io/clmplus/reference/predict.clmplusmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict the Reserve using Chain Ladder Plus Models — predict.clmplusmodel","text":"object clmplusmodel, Model predict . gk.fc.model character, model forecast cohort component last accident period. can either arima ('') linear model ('l'). Disregarded models cohort effect. ckj.fc.model character, model forecast calendar period effect. can either arima ('') linear model ('l'). Disregarded models period effect. gk.order integer, order arima model drift accident year effect extrapolation. Default (1,1,0). ckj.order integer, order arima model drift calendar year effect extrapolation. Default (0,1,0). forecasting_horizon integer, 1 triangle width. Calendar periods ahead predictions. Default predictions run-. ... Extra arguments passed predict function.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/predict.clmplusmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict the Reserve using Chain Ladder Plus Models — predict.clmplusmodel","text":"Returns following output:  reserve numeric reserve accident period. ultimate_cost numeric ultimate cost accident period. full_triangle matrix array complete run-triangle cumulative payments, includes (input) upper triangle predicted (output) lower triangle. lower_triangle matrix array predicted lower triangle cumulative payments. development_factors_predicted matrix array predicted lower triangle extrapolated development factors. apc_output list following output age-period-cohort representation: model.fit (fitStMoMo) age-period-cohort model fit.   alphaij (matrix array) predicted claim development.   lower_triangle_apc (matrix array) predicted lower triangle cumulative payments age-period-cohort form.   development_factors_apc (matrix array) development factors age-period-cohort representation.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/predict.clmplusmodel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predict the Reserve using Chain Ladder Plus Models — predict.clmplusmodel","text":"Pittarello, Gabriele, Munir Hiabu, Andrés M. Villegas. \"Replicating extending chain ladder via age-period-cohort structure claim development run-triangle.\" arXiv preprint arXiv:2301.03858 (2023).","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/sifa.gtpl.html","id":null,"dir":"Reference","previous_headings":"","what":"Sifa GTPL — sifa.gtpl","title":"Sifa GTPL — sifa.gtpl","text":"Dataset cumulative paid claims medium italian company line business: general third party liability.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/sifa.gtpl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sifa GTPL — sifa.gtpl","text":"","code":"sifa.gtpl"},{"path":"https://gpitt71.github.io/clmplus/reference/sifa.gtpl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sifa GTPL — sifa.gtpl","text":"Run-triangle 12 development periods.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/sifa.gtpl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sifa GTPL — sifa.gtpl","text":"Savelli, Nino,  Clemente, Gian Paolo. \"Lezioni di matematica attuariale delle assicurazioni danni.\" EDUCatt-Ente per il diritto allo studio universitario dell'Università Cattolica, 2014","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/sifa.mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Sifa MOD — sifa.mod","title":"Sifa MOD — sifa.mod","text":"Dataset cumulative paid claims medium italian company line business: motor damage.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/sifa.mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sifa MOD — sifa.mod","text":"","code":"sifa.mod"},{"path":"https://gpitt71.github.io/clmplus/reference/sifa.mod.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sifa MOD — sifa.mod","text":"Run-triangle 12 development periods.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/sifa.mod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sifa MOD — sifa.mod","text":"Savelli, Nino, Clemente, Gian Paolo. \"Lezioni di matematica attuariale delle assicurazioni danni.\" EDUCatt-Ente per il diritto allo studio universitario dell'Università Cattolica, 2014","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/sifa.mtpl.html","id":null,"dir":"Reference","previous_headings":"","what":"Sifa MTPL — sifa.mtpl","title":"Sifa MTPL — sifa.mtpl","text":"Dataset cumulative paid claims medium italian company line business: motor third party liability.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/sifa.mtpl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sifa MTPL — sifa.mtpl","text":"","code":"sifa.mtpl"},{"path":"https://gpitt71.github.io/clmplus/reference/sifa.mtpl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sifa MTPL — sifa.mtpl","text":"Run-triangle 12 development periods.","code":""},{"path":"https://gpitt71.github.io/clmplus/reference/sifa.mtpl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sifa MTPL — sifa.mtpl","text":"Savelli, Nino, Clemente, Gian Paolo. \"Lezioni di matematica attuariale delle assicurazioni danni.\" EDUCatt-Ente per il diritto allo studio universitario dell'Università Cattolica, 2014","code":""}]
